(()=>{"use strict";const e=document.getElementById("task-template"),t=document.querySelector(".btn-delete-project"),n=document.querySelector(".btn-delete-complete"),d=document.querySelector(".btn-new-project"),l=document.querySelector("#btn-add-task"),a=document.querySelector(".edit-task-title-input"),o=document.querySelector(".edit-task-date"),i=document.querySelector(".edit-task-details"),s=document.getElementsByName("edit-priority");function c(e){for(;e.firstChild;)e.removeChild(e.firstChild)}function r(e,t){const n=e.tasks.filter((e=>!e.complete)).length,d=1===n?"task":"tasks";t.innerText=`${n} ${d} remaining`}function u(e){const a=document.querySelector(".edit-task-container"),o=document.querySelector(".newtask");a.classList.add("edit-not-active"),o.classList.remove("new-not-active"),function(){t.disabled=!1,n.disabled=!1,d.disabled=!1,l.disabled=!1,document.querySelectorAll(".btn-task-delete").forEach((e=>e.disabled=!1));let e=document.getElementsByTagName("input");for(let t=0;t<e.length;t++)"checkbox"==e[t].type&&(e[t].disabled=!1)}(),e.classList.remove("project-list-none")}const m=document.querySelector(".project-list"),p=document.querySelector("[data-new-project-form]"),k=document.querySelector(".new-project-input"),y=document.querySelector(".btn-delete-project"),f=document.querySelector(".todo-content"),S=document.querySelector(".todo-title"),v=document.querySelector(".task-count"),g=document.querySelector(".all-tasks"),q=document.querySelector(".btn-delete-complete"),b=document.querySelector(".new-task-form"),L=document.querySelector(".new-task-title-input"),h=document.querySelector(".new-task-date"),w=document.querySelector(".new-task-details"),E=document.getElementsByName("create-new-priority"),j=document.querySelector(".edit-task-form"),N=document.querySelector(".edit-task-title-input"),I=document.querySelector(".edit-task-date"),D=document.querySelector(".edit-task-details"),B=document.getElementsByName("edit-priority");let C=JSON.parse(localStorage.getItem("project.lists"))||[],x=localStorage.getItem("project.selectedListId"),T="";function A(){localStorage.setItem("project.lists",JSON.stringify(C)),localStorage.setItem("project.selectedListId",x)}function J(){c(m),function(e,t,n){e.forEach((e=>{const d=document.createElement("li");d.dataset.projId=e.id,d.classList.add("project-list-name"),d.innerText=e.name,e.id===t&&d.classList.add("active-project"),n.appendChild(d)}))}(C,x,m);const t=C.find((e=>e.id===x));"null"==x||null===x?f.style.display="none":(f.style.display="",S.innerText=t.name,r(t,v),c(g),function(t,n){t.tasks.forEach((t=>{const d=document.importNode(e.content,!0),l=d.querySelector(".task-row");"low"==t.priority?l.classList.add("task-low"):"medium"==t.priority?l.classList.add("task-medium"):l.classList.add("task-high");const a=d.querySelector("input");a.id=t.id,a.checked=t.complete;const o=d.querySelector("label");o.htmlFor=t.id,o.append(t.name),d.querySelector(".task-date").append(t.dueDate),d.querySelector(".task-priority").append(t.priority),d.querySelector(".task-notes").append(t.notes),d.querySelector(".btn-task-details").id="details-"+t.id,d.querySelector(".btn-task-edit").id="edit-"+t.id,d.querySelector(".btn-task-delete").id="delete-"+t.id,d.querySelector(".task-details-row").id="row-"+t.id,n.appendChild(d)}))}(t,g))}m.addEventListener("click",(e=>{"li"===e.target.tagName.toLowerCase()&&(x=e.target.dataset.projId,A(),J())})),g.addEventListener("click",(e=>{if("input"===e.target.tagName.toLowerCase()){const t=C.find((e=>e.id===x));t.tasks.find((t=>t.id===e.target.id)).complete=e.target.checked,A(),r(t,v)}})),q.addEventListener("click",(e=>{let t=C.find((e=>e.id===x));0===t.tasks.filter((e=>e.complete)).length?alert("No completed task to delete"):(t=C.find((e=>e.id===x)),t.tasks=t.tasks.filter((e=>!e.complete)),A(),J())})),g.addEventListener("click",(e=>{if(e.target.classList.contains("btn-task-details")){const t=e.target.id.split("-");document.getElementById("row-"+t[1]).classList.toggle("active-details")}})),g.addEventListener("click",(e=>{if(e.target.classList.contains("btn-task-edit")){!function(){t.disabled=!0,n.disabled=!0,d.disabled=!0,l.disabled=!0,document.querySelectorAll(".btn-task-delete").forEach((e=>e.disabled=!0));let e=document.getElementsByTagName("input");for(let t=0;t<e.length;t++)"checkbox"==e[t].type&&(e[t].disabled=!0)}();let c=e.target.id.split("-");T=c[1];const r=C.find((e=>e.id===x));!function(e,t){t.classList.add("project-list-none");const n=document.querySelector(".edit-task-container"),d=document.querySelector(".newtask");n.classList.remove("edit-not-active"),d.classList.add("new-not-active"),a.value=e.name,i.value=e.notes,o.value=e.dueDate;for(let t=0;t<s.length;t++)s[t].value==e.priority&&(s[t].checked=!0)}(r.tasks.find((e=>e.id===T)),m),j.addEventListener("submit",(e=>{e.preventDefault();const t=N.value,n=I.value,d=D.value;let l="";for(let e=0;e<B.length;e++)B[e].checked&&(l=B[e].value);let a=r.tasks.find((e=>e.id===T));a.name=t,a.notes=d,a.dueDate=n,a.priority=l,A(),u(m),J()})),document.querySelector("#btn-cancel-edit-task").addEventListener("click",(()=>{u(m)}))}})),g.addEventListener("click",(e=>{if(e.target.classList.contains("btn-task-delete")){let t=e.target.id.split("-")[1];const n=C.find((e=>e.id===x));n.tasks=n.tasks.filter((e=>e.id!==t)),A(),J()}})),y.addEventListener("click",(e=>{C=C.filter((e=>e.id!==x)),x=null,A(),J()})),p.addEventListener("submit",(e=>{e.preventDefault();const t=(n=k.value,{id:Date.now().toString(),name:n,tasks:[]});var n;k.value=null,C.push(t),A(),J()})),b.addEventListener("submit",(e=>{if(e.preventDefault(),"null"==x||null===x)return void alert("Please select a project to add the new task.");const t=L.value,n=h.value,d=w.value;let l="";for(let e=0;e<E.length;e++)E[e].checked&&(l=E[e].value);if(null==t||""===t)return;const a=(o=t,i=d,s=n,c=l,{id:Date.now().toString(),name:o,complete:!1,dueDate:s,notes:i,priority:c});var o,i,s,c;L.value=null,w.value=null,C.find((e=>e.id===x)).tasks.push(a),A(),J()})),J()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,