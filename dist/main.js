(()=>{const e=document.querySelector(".project-list"),t=document.querySelector("[data-new-project-form]"),n=document.querySelector(".new-project-input"),a=document.querySelector(".btn-delete-project"),d=document.querySelector(".btn-new-project"),l=document.querySelector(".todo-content"),o=document.querySelector(".todo-title"),s=document.querySelector(".task-count"),c=document.querySelector(".all-tasks"),r=document.querySelector(".btn-delete-complete"),u=document.getElementById("task-template"),m=document.querySelector(".new-task-form"),p=document.querySelector(".new-task-title-input"),k=document.querySelector(".new-task-date"),y=document.querySelector(".new-task-details"),f=document.getElementsByName("create-new-priority"),S=document.querySelector("#btn-add-task"),v=document.querySelector(".edit-task-form"),g=document.querySelector(".edit-task-title-input"),q=document.querySelector(".edit-task-date"),b=document.querySelector(".edit-task-details"),L=document.getElementsByName("edit-priority");document.querySelector("#btn-edit-task");let h=JSON.parse(localStorage.getItem("project.lists"))||[],w=localStorage.getItem("project.selectedListId"),E="";function j(){const t=document.querySelector(".edit-task-container"),n=document.querySelector(".newtask");t.classList.add("edit-not-active"),n.classList.remove("new-not-active"),function(){a.disabled=!1,r.disabled=!1,d.disabled=!1,S.disabled=!1,document.querySelectorAll(".btn-task-delete").forEach((e=>e.disabled=!1));let e=document.getElementsByTagName("input");for(i=0;i<e.length;i++)"checkbox"==e[i].type&&(e[i].disabled=!1)}(),e.classList.remove("project-list-none")}function I(){localStorage.setItem("project.lists",JSON.stringify(h)),localStorage.setItem("project.selectedListId",w)}function N(){C(e),h.forEach((t=>{const i=document.createElement("li");i.dataset.projId=t.id,i.classList.add("project-list-name"),i.innerText=t.name,t.id===w&&i.classList.add("active-project"),e.appendChild(i)}));const t=h.find((e=>e.id===w));"null"==w||null===w?l.style.display="none":(l.style.display="",o.innerText=t.name,D(t),C(c),function(e){e.tasks.forEach((e=>{const t=document.importNode(u.content,!0),i=t.querySelector(".task-row");"low"==e.priority?i.classList.add("task-low"):"medium"==e.priority?i.classList.add("task-medium"):i.classList.add("task-high");const n=t.querySelector("input");n.id=e.id,n.checked=e.complete;const a=t.querySelector("label");a.htmlFor=e.id,a.append(e.name),t.querySelector(".task-date").append(e.dueDate),t.querySelector(".task-priority").append(e.priority),t.querySelector(".task-notes").append(e.notes),t.querySelector(".btn-task-details").id="details-"+e.id,t.querySelector(".btn-task-edit").id="edit-"+e.id,t.querySelector(".btn-task-delete").id="delete-"+e.id,t.querySelector(".task-details-row").id="row-"+e.id,c.appendChild(t)}))}(t))}function D(e){const t=e.tasks.filter((e=>!e.complete)).length,i=1===t?"task":"tasks";s.innerText=`${t} ${i} remaining`}function C(e){for(;e.firstChild;)e.removeChild(e.firstChild)}e.addEventListener("click",(e=>{"li"===e.target.tagName.toLowerCase()&&(w=e.target.dataset.projId,I(),N())})),c.addEventListener("click",(e=>{if("input"===e.target.tagName.toLowerCase()){const t=h.find((e=>e.id===w));t.tasks.find((t=>t.id===e.target.id)).complete=e.target.checked,I(),D(t)}})),r.addEventListener("click",(e=>{let t=h.find((e=>e.id===w));0===t.tasks.filter((e=>e.complete)).length?alert("No completed task to delete"):(t=h.find((e=>e.id===w)),t.tasks=t.tasks.filter((e=>!e.complete)),I(),N())})),c.addEventListener("click",(e=>{if(e.target.classList.contains("btn-task-details")){const t=e.target.id.split("-");document.getElementById("row-"+t[1]).classList.toggle("active-details")}})),c.addEventListener("click",(t=>{if(t.target.classList.contains("btn-task-edit")){!function(){a.disabled=!0,r.disabled=!0,d.disabled=!0,S.disabled=!0,document.querySelectorAll(".btn-task-delete").forEach((e=>e.disabled=!0));let e=document.getElementsByTagName("input");for(i=0;i<e.length;i++)"checkbox"==e[i].type&&(e[i].disabled=!0)}();let n=t.target.id.split("-");E=n[1];const l=h.find((e=>e.id===w));!function(t){e.classList.add("project-list-none");const n=document.querySelector(".edit-task-container"),a=document.querySelector(".newtask");for(n.classList.remove("edit-not-active"),a.classList.add("new-not-active"),g.value=t.name,b.value=t.notes,q.value=t.dueDate,i=0;i<L.length;i++)L[i].value==t.priority&&(L[i].checked=!0)}(l.tasks.find((e=>e.id===E))),v.addEventListener("submit",(e=>{e.preventDefault();const t=g.value,n=q.value,a=b.value;let d="";for(i=0;i<L.length;i++)L[i].checked&&(d=L[i].value);let o=l.tasks.find((e=>e.id===E));o.name=t,o.notes=a,o.dueDate=n,o.priority=d,I(),j(),N()})),document.querySelector("#btn-cancel-edit-task").addEventListener("click",(()=>{j()}))}})),c.addEventListener("click",(e=>{if(e.target.classList.contains("btn-task-delete")){let t=e.target.id.split("-")[1];const i=h.find((e=>e.id===w));i.tasks=i.tasks.filter((e=>e.id!==t)),I(),N()}})),a.addEventListener("click",(e=>{h=h.filter((e=>e.id!==w)),w=null,I(),N()})),t.addEventListener("submit",(e=>{e.preventDefault();const t=(i=n.value,{id:Date.now().toString(),name:i,tasks:[]});var i;n.value=null,h.push(t),I(),N()})),m.addEventListener("submit",(e=>{if(e.preventDefault(),"null"==w||null===w)return void alert("Please select a project to add the new task.");const t=p.value,n=k.value,a=y.value;let d="";for(i=0;i<f.length;i++)f[i].checked&&(d=f[i].value);if(null==t||""===t)return;const l=(o=t,s=a,c=n,r=d,{id:Date.now().toString(),name:o,complete:!1,dueDate:c,notes:s,priority:r});var o,s,c,r;p.value=null,y.value=null,h.find((e=>e.id===w)).tasks.push(l),I(),N()})),N()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,